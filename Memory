from random import shuffle
from turtle import *
from freegames import path

car = path('car.gif')

# Lista de símbolos únicos (duplicados para pares)
symbols = ['♥', '♠', '♦', '♣', '★', '✿', '☀', '☁',
           '♫', '♪', '⚓', '⚡', '☮', '☯', '⚽', '⚾',
           '✈', '✌', '✓', '✂', '⚕', '⚙', '⚖', '⌛',
           '☎', '✉', '✒', '⌨', '☝', '☺', '✈', '☂']

tiles = symbols * 2  # Duplicar para 64 cartas
state = {'mark': None}
hide = [True] * 64  # Todas las cartas empiezan ocultas
tapsCounter = 0

def square(x, y):
    "Dibuja un cuadrado blanco con borde negro en (x, y)."
    up()
    goto(x, y)
    down()
    color('black', 'white')
    begin_fill()
    for count in range(4):
        forward(50)
        left(90)
    end_fill()

def index(x, y):
    "Convierte coordenadas (x, y) a índice de carta."
    return int((x + 200) // 50 + ((y + 200) // 50) * 8)

def xy(count):
    "Convierte índice de carta a coordenadas (x, y)."
    return (count % 8) * 50 - 200, (count // 8) * 50 - 200

def tap(x, y):
    "Actualiza el estado según el toque del jugador."
    global tapsCounter
    spot = index(x, y)
    mark = state['mark']
    tapsCounter += 1

    if hide[spot]:
        if mark is None or mark == spot or tiles[mark] != tiles[spot]:
            state['mark'] = spot
        else:
            hide[spot] = False
            hide[mark] = False
            state['mark'] = None

def draw():
    "Dibuja el tablero del juego."
    clear()
    goto(0, 0)
    shape(car)
    stamp()

    mark = state['mark']

    for count in range(64):
        x, y = xy(count)
        up()

        if hide[count]:
            square(x, y)
            # Si es la carta marcada, mostrar el símbolo, no el "?"
            if count == mark:
                goto(x + 25, y + 5)
                color('black')
                write(tiles[count], font=('Arial', 30, 'normal'), align='center')
            else:
                goto(x + 25, y + 5)
                color('black')
                write('?', font=('Arial', 30, 'normal'), align='center')
        else:
            goto(x + 25, y + 5)
            color('black')
            write(tiles[count], font=('Arial', 30, 'normal'), align='center')

    # Mostrar contador de taps
    up()
    goto(-180, 180)
    color('black')
    write(f'Taps: {tapsCounter}', font=('Arial', 16, 'normal'))

    # Mensaje al finalizar el juego
    if all(not h for h in hide):
        goto(-100, 0)
        color('red')
        write('¡Juego terminado!', font=('Arial', 24, 'bold'))

    update()
    ontimer(draw, 100)

shuffle(tiles)
setup(420, 420, 370, 0)
addshape(car)
hideturtle()
tracer(False)
onscreenclick(tap)
draw()
done()
